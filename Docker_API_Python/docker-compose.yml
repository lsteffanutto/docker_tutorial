# Une fois que j'ai créé une image de mon code python, on utilise Docker Compose pour orchestrer les deux en se servant de redis
# Ajoute le fait que la base de données Redis doit d'abord être installé avant de lancer le code Python
version: "3"

# Définir les différents services (conteneurs) qui vont tourner en même temps lors de l'éxécution du Docker-Compose
services:

  # Utilise l'image de base Redis pour tourner
  redis:
   image: redis

  # Besoin d'une image pour fonctionner (si image spécifié n'est pas présente il va la télécharger depuis le docker up)
  application:

    # Docker instantie d'abord cette base de donnée avant de lancer le code Python
    depends_on:
      - redis

    # Nom de l'image du code Python créé
    image: my-python-app

    # Spécifie les ports de notre application -port_intern:port_externe
    ports:
      - 5000:5000

# Quand les containers sont bien orchestré on peut faire " docker-compose up "
# => !!! Avant de le lancer vérifier avec " docker-compose config " !!!

### CORRECTION OPENCLASSROOM ###

# version: "3"
# services:
#   redis:
#     image: redis
#     ports:
#       - 6379:6379
#   api:
#     image: your_image_name
#     ports:
#       - 5000:5000
#     depends_on:
#       - redis